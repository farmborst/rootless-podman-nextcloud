#!/usr/bin/env bash
# bash script for setting up nextcloud pod with all required services as nested containers
# security is not configured for direct web exposure but should be suitable for the intended scenario with access limited to private lan / vpn


## see https://hub.docker.com/_/nextcloud for info on auto configuration via environment variables
## create file secrets with commented variables listed below
# NEXTCLOUD_TRUSTED_DOMAINS='"10.8.0.2 192.168.1.2"'  # IPs or domains you will be using to access nc
# MAIL_FROM_ADDRESS='somegmail.cron'                  # mail adress nc will use to inform you about stuff
# MAIL_DOMAIN='gmail.com'                             # details for nc to use your mail (example for using gmail)
# SMTP_HOST='smtp.gmail.com'                          # details for nc to use your mail (example for using gmail)
# SMTP_PORT='587'                                     # details for nc to use your mail (example for using gmail)
# SMTP_SECURE='tls'                                   # details for nc to use your mail (example for using gmail)
# SMTP_NAME='somegmail.cron@gmail.com'                # details for nc to use your mail (example for using gmail)
# SMTP_PASSWORD='tokenpassword'                       # details for nc to use your mail (example for using gmail)
# MYSQL_PASSWORD='strongpassword'
# MYSQL_ROOT_PASSWORD='strongpassword'
# NEXTCLOUD_ADMIN_PASSWORD='strongpassword'
# COLLABORA_PASSWORD='strongpassword'
# REDIS_PASSWORD='strongpassword'
# adminuser_mail='yourmail@receivemailsfromnextcloudserver'


## source passwords and sensitive data from gitignored secrets file 
. ./secrets


## define more variables for this script (user input optional and generally not required)
default_phone_region='CH'
maintenance_window_start=3
log_type='file'
logfile='nextcloud.log'
loglevel=0
logdateformat="Y-m-d H:i:s"

PODNAME='nextcloudpod'
CONTAINER1='nextcloudcontainer'
CONTAINER2='mariadbcontainer'
CONTAINER3='rediscontainer'
CONTAINER4='collaboracontainer'
MYSQL_ROOT_HOST='localhost'
MYSQL_DATABASE='nextcloud'
MYSQL_USER='ncuser'
MYSQL_HOST='127.0.0.1:3306'
NEXTCLOUD_ADMIN_USER='admin'
NEXTCLOUD_DATA_DIR='/var/www/html/data'
REDIS_HOST='localhost'
REDIS_HOST_PORT='7777'
COLLABORA_USER='ncuser'


# prepare config volumes stored at ~/.local/share/containers/storage/volumes/
podman volume create ncv_nc
podman volume create ncv_mariadb
podman volume create ncv_redis
podman volume create ncv_data


# prepare data volume stored at /mnt/raid1/nextcloudstorage
# podman volume create -o device=/mnt/raid1/nextcloudstorage/ -o=o=bind ncv_data


## create pod
hash_pod=$(podman pod create \
   --name=$PODNAME \
   --publish 8080:80    `# publish nextcloud container http port` \
   --publish 9980:9980  `# publish collabora container port` \
   --restart "unless-stopped")


## create container nr. 2 as child of pod
# mariadb, see also https://mariadb.com/kb/en/release-notes/ and https://hub.docker.com/_/mariadb/tags
podman container create \
   --pod $PODNAME \
   --name=$CONTAINER2 \
   --label "io.containers.autoupdate=registry" \
   --restart "unless-stopped" \
   --env MYSQL_ROOT_PASSWORD=$MYSQL_ROOT_PASSWORD \
   --env MYSQL_ROOT_HOST=$MYSQL_ROOT_HOST \
   --env MYSQL_DATABASE=$MYSQL_DATABASE \
   --env MYSQL_USER=$MYSQL_USER \
   --env MYSQL_PASSWORD=$MYSQL_PASSWORD \
   --volume ncv_mariadb:/var/lib/mysql \
   docker.io/library/mariadb:lts


## create container nr. 3 as child of pod
# redis, see also https://hub.docker.com/_/redis and https://hub.docker.com/_/redis/tags
podman container create \
   --pod $PODNAME \
   --name=$CONTAINER3 \
   --label "io.containers.autoupdate=registry" \
   --restart "unless-stopped" \
   --entrypoint='["redis-server", "--port", "'$REDIS_HOST_PORT'", "--requirepass", "'$REDIS_PASSWORD'"]' \
   --volume ncv_redis:/data \
   docker.io/library/redis:latest


## create container nr. 4 as child of pod
# collabora, see also https://sdk.collaboraonline.com/docs/installation/CODE_Docker_image.html and https://hub.docker.com/r/collabora/code/tags
# hash_container4=$(podman container create \
#    --pod $PODNAME \
#    --name=$CONTAINER4 \
#    --label "io.containers.autoupdate=registry" \
#    --restart "unless-stopped" \
#    --env extra_params="--o:security.seccomp=false --o:ssl.enable=false --o:ssl.termination=true" \
#    --env dictionaries="de_DE en_GB en_US" \
#    --env aliasgroup1=http://192.168.1.2:8080 \
#    --env aliasgroup2=http://10.0.0.2:8080 \
#    --env username=$COLLABORA_USER \
#    --env password=$COLLABORA_PASSWORD \
#    docker.io/collabora/code:latest)


## create container nr. 1 as child of pod
# nextcloud, see also  and https://hub.docker.com/_/nextcloud/tags
podman container create \
   --pod $PODNAME \
   --name=$CONTAINER1 \
   --requires $CONTAINER2,$CONTAINER3 \
   --label "io.containers.autoupdate=registry" \
   --restart "unless-stopped" \
   --env NEXTCLOUD_TRUSTED_DOMAINS="$NEXTCLOUD_TRUSTED_DOMAINS" \
   --env NEXTCLOUD_ADMIN_USER=$NEXTCLOUD_ADMIN_USER \
   --env NEXTCLOUD_ADMIN_PASSWORD=$NEXTCLOUD_ADMIN_PASSWORD \
   --env NEXTCLOUD_DATA_DIR=$NEXTCLOUD_DATA_DIR \
   --env MAIL_FROM_ADDRESS=$MAIL_FROM_ADDRESS \
   --env MAIL_DOMAIN=$MAIL_DOMAIN \
   --env SMTP_HOST=$SMTP_HOST \
   --env SMTP_PORT=$SMTP_PORT \
   --env SMTP_AUTHTYPE=$SMTP_AUTHTYPE \
   --env SMTP_SECURE=$SMTP_SECURE \
   --env SMTP_NAME=$SMTP_NAME \
   --env SMTP_PASSWORD=$SMTP_PASSWORD \
   --env MYSQL_DATABASE=$MYSQL_DATABASE \
   --env MYSQL_USER=$MYSQL_USER \
   --env MYSQL_PASSWORD=$MYSQL_PASSWORD \
   --env MYSQL_HOST=$MYSQL_HOST \
   --env REDIS_HOST=$REDIS_HOST \
   --env REDIS_HOST_PORT=$REDIS_HOST_PORT \
   --env REDIS_HOST_PASSWORD=$REDIS_PASSWORD \
   --volume ncv_nc:/var/www/html \
   --volume ncv_data:$NEXTCLOUD_DATA_DIR \
   --entrypoint='["bash", "-c", "/usr/bin/sleep 10 && /entrypoint.sh apache2-foreground"]' \
   docker.io/library/nextcloud:stable


podman pod start $PODNAME

echo "... waiting for initialization ..."
sleep 30
echo "..."
sleep 30
echo "... adding some configuration ..."

## add some configuration for the nextcloud container that are unfortunately not available via env (these changes are permanent since they are written the mounted volume ncv_nc at ~/.local/share/containers/storage/volumes/ncv_nc/_data/config/config.php)
# set phone region
podman  exec -t -u www-data $CONTAINER1 php -f /var/www/html/occ config:system:set default_phone_region --value $default_phone_region
# set start time for the 4 hour maintenance window
podman  exec -t -u www-data $CONTAINER1 php -f /var/www/html/occ config:system:set maintenance_window_start --value $maintenance_window_start
# setup logging to file
podman  exec -t -u www-data $CONTAINER1 php -f /var/www/html/occ config:system:set log_type --value $log_type
podman  exec -t -u www-data $CONTAINER1 php -f /var/www/html/occ config:system:set logfile --value $logfile
podman  exec -t -u www-data $CONTAINER1 php -f /var/www/html/occ config:system:set loglevel --value $loglevel
podman  exec -t -u www-data $CONTAINER1 php -f /var/www/html/occ config:system:set logdateformat --value $logdateformat
# setup admin user email
podman  exec -t -u www-data $CONTAINER1 php -f /var/www/html/occ user:setting admin settings email $adminuser_mail
# setup background jobs scheduler to cron (correct for systemd service as foreseen in this setup)
podman  exec -t -u www-data $CONTAINER1 php -f /var/www/html/occ background:cron

echo "... finished, log in as admin using your browser at '$NEXTCLOUD_TRUSTED_DOMAINS' on port 8080"